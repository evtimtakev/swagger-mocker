{
   "swagger":"2.0",
   "info":{
      "version":"v1",
      "title":"thinfabrics.FI.Web.API"
   },
   "host":"localhost:53453",
   "schemes":[
      "http"
   ],
   "paths":{
      "/api/Archive":{
         "post":{
            "tags":[
               "Archive"
            ],
            "summary":"Archive",
            "description":"",
            "operationId":"Archive_Post",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oArchive",
                  "in":"body",
                  "description":"",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/Archive"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/filters":{
         "get":{
            "tags":[
               "Filters"
            ],
            "summary":"Get all filters from all institutes",
            "description":"",
            "operationId":"Filters_Get",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object",
                     "additionalProperties":{
                        "$ref":"#/definitions/Filters"
                     }
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/filters/{oInstituteId}":{
         "get":{
            "tags":[
               "Filters"
            ],
            "summary":"Get filters from the institute",
            "description":"",
            "operationId":"Filters_Get",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oInstituteId",
                  "in":"path",
                  "description":"The institute unique identifier",
                  "required":true,
                  "type":"string",
                  "format":"uuid"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/Filters"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         },
         "post":{
            "tags":[
               "Filters"
            ],
            "summary":"Create or update filters for the institute",
            "description":"",
            "operationId":"Filters_Post",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oInstituteId",
                  "in":"path",
                  "description":"The institute unique identifier",
                  "required":true,
                  "type":"string",
                  "format":"uuid"
               },
               {
                  "name":"oFilters",
                  "in":"body",
                  "description":"",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/Filters"
                  }
               }
            ],
            "responses":{
               "201":{
                  "description":"Created",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/institutes":{
         "get":{
            "tags":[
               "Institutes"
            ],
            "summary":"Get all Institutes",
            "operationId":"Institutes_Get",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"count",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"orderBy",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"sort",
                  "in":"query",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "Ascending",
                     "Asc",
                     "Descending",
                     "Desc"
                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/Institute"
                     }
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/institutes/{oId}/connection":{
         "patch":{
            "tags":[
               "Institutes"
            ],
            "summary":"UpdateInstitute Connection Settings",
            "operationId":"Institutes_Put",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oId",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "type":"string",
                  "format":"uuid"
               },
               {
                  "name":"connectionSetting",
                  "in":"body",
                  "description":"",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/InstituteConnectionSetting"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"boolean"
                     }
                  }
               }
            }
         }
      },
      "/api/institutes/{oId}/domains":{
         "get":{
            "tags":[
               "Institutes"
            ],
            "summary":"Get Institute Domains",
            "operationId":"Institutes_GetDomains",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oId",
                  "in":"path",
                  "required":true,
                  "type":"string",
                  "format":"uuid"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "type":"string"
                     }
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/Log":{
         "post":{
            "tags":[
               "Log"
            ],
            "summary":"Write new Filter Log",
            "operationId":"Log_Post",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oFilterStatusLogs",
                  "in":"body",
                  "description":"",
                  "required":true,
                  "schema":{
                     "type":"object",
                     "additionalProperties":{
                        "type":"array",
                        "items":{
                           "$ref":"#/definitions/FilterStatusLog"
                        }
                     }
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/notificationservers":{
         "get":{
            "tags":[
               "NotificationServers"
            ],
            "summary":"Get all Notification Servers",
            "operationId":"NotificationServers_Get",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"count",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"orderBy",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"sort",
                  "in":"query",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "Ascending",
                     "Asc",
                     "Descending",
                     "Desc"
                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/NotificationServer"
                     }
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/notificationservers/{oId}":{
         "get":{
            "tags":[
               "NotificationServers"
            ],
            "summary":"Get specific Notification Server by ID",
            "operationId":"NotificationServers_Get",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oId",
                  "in":"path",
                  "required":true,
                  "type":"string",
                  "format":"uuid"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/NotificationServer"
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/notificationservers/{oId}/mailboxes":{
         "get":{
            "tags":[
               "NotificationServers"
            ],
            "summary":"Get assigned Mailboxes of a specific Notification Service",
            "operationId":"NotificationServers_GetMailboxes",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oId",
                  "in":"path",
                  "description":"ID of the Notification Service",
                  "required":true,
                  "type":"string",
                  "format":"uuid"
               },
               {
                  "name":"initiallyAssigned",
                  "in":"query",
                  "description":"If true, the initially assigned Mailboxes are returned. Otherwise the currently assigned Mailboxes are returned.",
                  "required":false,
                  "type":"boolean"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/MailboxEntity"
                  }
               }
            }
         },
         "post":{
            "tags":[
               "NotificationServers"
            ],
            "summary":"Delete Mailbox from Notificationserver",
            "operationId":"NotificationServers_AddMailbox",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oId",
                  "in":"path",
                  "description":"NotificationServer Id",
                  "required":true,
                  "type":"string",
                  "format":"uuid"
               },
               {
                  "name":"strMailbox",
                  "in":"body",
                  "description":"Mailbox",
                  "required":true,
                  "schema":{
                     "type":"string"
                  }
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               }
            }
         }
      },
      "/api/notificationservers/{oId}/mailboxes/{strMailbox}":{
         "delete":{
            "tags":[
               "NotificationServers"
            ],
            "summary":"Delete Mailbox from Notificationserver",
            "operationId":"NotificationServers_DeleteMailbox",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oId",
                  "in":"path",
                  "description":"NotificationServer Id",
                  "required":true,
                  "type":"string",
                  "format":"uuid"
               },
               {
                  "name":"strMailbox",
                  "in":"path",
                  "description":"Mailbox",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"object"
                  }
               }
            }
         }
      },
      "/api/performancecounter/{serverFQDN}/{performanceCounter}":{
         "get":{
            "tags":[
               "PerformanceCounter"
            ],
            "summary":"Get PerformanceCounter Trace Values",
            "operationId":"PerformanceCounter_Get",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"serverFQDN",
                  "in":"path",
                  "description":"FQDN of Machine",
                  "required":true,
                  "type":"string"
               },
               {
                  "name":"performanceCounter",
                  "in":"path",
                  "description":"PerformanceCounter Name",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/PerformanceCounterTraceValue"
                     }
                  }
               }
            }
         }
      },
      "/api/settings":{
         "get":{
            "tags":[
               "Settings"
            ],
            "summary":"Get all Settings",
            "operationId":"Settings_GetAsync",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"filter",
                  "in":"query",
                  "required":true,
                  "type":"array",
                  "items":{

                  },
                  "collectionFormat":"multi"
               },
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"count",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"orderBy",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"sort",
                  "in":"query",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "Ascending",
                     "Asc",
                     "Descending",
                     "Desc"
                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/PaginationEntity[SettingEntity]"
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         },
         "post":{
            "tags":[
               "Settings"
            ],
            "summary":"Update an existing Setting",
            "operationId":"Settings_PostAsync",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oSetting",
                  "in":"body",
                  "description":"",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/SettingEntity"
                  }
               },
               {
                  "name":"strKey",
                  "in":"query",
                  "description":"",
                  "required":false,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/SettingEntity"
                  }
               },
               "201":{
                  "description":"Created",
                  "schema":{
                     "$ref":"#/definitions/SettingEntity"
                  }
               },
               "400":{
                  "description":"BadRequest"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/settings/{strKey}":{
         "get":{
            "tags":[
               "Settings"
            ],
            "summary":"Get specific Setting by Key",
            "operationId":"Settings_GetAsync",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"strKey",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/SettingEntity"
                  }
               },
               "400":{
                  "description":"Bad Request"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         },
         "post":{
            "tags":[
               "Settings"
            ],
            "summary":"Update an existing Setting",
            "operationId":"Settings_PostAsync",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oSetting",
                  "in":"body",
                  "description":"",
                  "required":true,
                  "schema":{
                     "$ref":"#/definitions/SettingEntity"
                  }
               },
               {
                  "name":"strKey",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "type":"string"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/SettingEntity"
                  }
               },
               "201":{
                  "description":"Created",
                  "schema":{
                     "$ref":"#/definitions/SettingEntity"
                  }
               },
               "400":{
                  "description":"BadRequest"
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/traces":{
         "get":{
            "tags":[
               "Traces"
            ],
            "summary":"Get all Trace Entries",
            "operationId":"Traces_GetAsync",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"filter",
                  "in":"query",
                  "required":true,
                  "type":"array",
                  "items":{

                  },
                  "collectionFormat":"multi"
               },
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"count",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"orderBy",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"sort",
                  "in":"query",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "Ascending",
                     "Asc",
                     "Descending",
                     "Desc"
                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/PaginationEntity[TraceEntity]"
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/traces/{oLogTimestamp}":{
         "get":{
            "tags":[
               "Traces"
            ],
            "summary":"Get Trace Entry with specific TimeStamp.",
            "operationId":"Traces_GetAsync",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oLogTimestamp",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/TraceEntity"
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/watchdogs":{
         "get":{
            "tags":[
               "Watchdogs"
            ],
            "summary":"Get Lifetime Status of Notification Servers for Watchdog",
            "operationId":"Watchdogs_GetAsync",
            "consumes":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml",
               "application/x-www-form-urlencoded"
            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"filter",
                  "in":"query",
                  "required":true,
                  "type":"array",
                  "items":{

                  },
                  "collectionFormat":"multi"
               },
               {
                  "name":"offset",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"count",
                  "in":"query",
                  "required":false,
                  "type":"integer",
                  "format":"int64"
               },
               {
                  "name":"orderBy",
                  "in":"query",
                  "required":false,
                  "type":"string"
               },
               {
                  "name":"sort",
                  "in":"query",
                  "required":false,
                  "type":"string",
                  "enum":[
                     "Ascending",
                     "Asc",
                     "Descending",
                     "Desc"
                  ]
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "type":"array",
                     "items":{
                        "$ref":"#/definitions/WatchdogEntity"
                     }
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      },
      "/api/watchdogs/{oId}":{
         "get":{
            "tags":[
               "Watchdogs"
            ],
            "summary":"Get Lifetime Status of specific Notification Server for Watchdog",
            "operationId":"Watchdogs_GetAsync",
            "consumes":[

            ],
            "produces":[
               "application/json",
               "text/json",
               "application/xml",
               "text/xml"
            ],
            "parameters":[
               {
                  "name":"oId",
                  "in":"path",
                  "description":"",
                  "required":true,
                  "type":"string",
                  "format":"uuid"
               }
            ],
            "responses":{
               "200":{
                  "description":"OK",
                  "schema":{
                     "$ref":"#/definitions/WatchdogEntity"
                  }
               },
               "500":{
                  "description":"Internal Server Error"
               }
            }
         }
      }
   },
   "definitions":{
      "Archive":{
         "type":"object",
         "properties":{
            "User":{
               "type":"string"
            },
            "Url":{
               "type":"string"
            },
            "FilterLogs":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/IFilterLog"
               }
            },
            "JournalMessageId":{
               "type":"string"
            },
            "InternetMessageId":{
               "type":"string"
            },
            "From":{
               "type":"string"
            },
            "DateTimeSent":{
               "format":"date-time",
               "type":"string"
            },
            "Subject":{
               "type":"string"
            },
            "Text":{
               "type":"string"
            },
            "Size":{
               "format":"int32",
               "type":"integer"
            },
            "Attachments":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/IAttachment"
               }
            },
            "MimeContent":{
               "format":"byte",
               "type":"string"
            }
         }
      },
      "IFilterLog":{
         "type":"object",
         "properties":{
            "Id":{
               "type":"string"
            },
            "Value":{
               "type":"string"
            },
            "Status":{
               "type":"boolean"
            },
            "ArchiveAction":{
               "type":"boolean"
            },
            "InternetMessageId":{
               "type":"string"
            },
            "InstituteId":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "Domain":{
               "type":"string"
            },
            "From":{
               "type":"string"
            },
            "To":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "Cc":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            },
            "Bcc":{
               "type":"array",
               "items":{
                  "type":"string"
               }
            }
         }
      },
      "IAttachment":{
         "type":"object",
         "properties":{
            "Name":{
               "type":"string"
            },
            "Size":{
               "format":"int32",
               "type":"integer"
            }
         }
      },
      "Filters":{
         "type":"object",
         "properties":{
            "Filter":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/IFilter"
               }
            },
            "GlobalValues":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/IFilterParameter"
               }
            }
         }
      },
      "IFilter":{
         "type":"object",
         "properties":{
            "Id":{
               "type":"string"
            },
            "Name":{
               "type":"string"
            },
            "Value":{
               "type":"string"
            },
            "Order":{
               "format":"int32",
               "type":"integer"
            },
            "LastUpdate":{
               "format":"date-time",
               "type":"string"
            },
            "IsEnabled":{
               "type":"boolean"
            },
            "User":{
               "type":"string"
            },
            "ArchiveAction":{
               "type":"boolean"
            },
            "LogAction":{
               "type":"string"
            }
         }
      },
      "IFilterParameter":{
         "type":"object",
         "properties":{
            "Key":{
               "type":"string"
            },
            "Value":{
               "type":"object"
            }
         }
      },
      "Institute":{
         "required":[
            "Id",
            "Username",
            "Password"
         ],
         "type":"object",
         "properties":{
            "Id":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "Description":{
               "maxLength":500,
               "minLength":0,
               "type":"string"
            },
            "InstituteID":{
               "type":"string"
            },
            "Username":{
               "maxLength":20,
               "minLength":0,
               "type":"string"
            },
            "Password":{
               "maxLength":20,
               "minLength":0,
               "type":"string"
            },
            "LastUpdate":{
               "format":"date-time",
               "type":"string"
            },
            "Region":{
               "$ref":"#/definitions/RegionEntity"
            },
            "Group":{
               "$ref":"#/definitions/GroupEntity"
            }
         }
      },
      "RegionEntity":{
         "required":[
            "Id",
            "Name",
            "Code"
         ],
         "type":"object",
         "properties":{
            "Id":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "Name":{
               "maxLength":100,
               "minLength":0,
               "type":"string"
            },
            "Code":{
               "maxLength":5,
               "minLength":0,
               "type":"string"
            },
            "Description":{
               "maxLength":500,
               "minLength":0,
               "type":"string"
            }
         }
      },
      "GroupEntity":{
         "required":[
            "Id",
            "Name",
            "ServiceName"
         ],
         "type":"object",
         "properties":{
            "Id":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "Name":{
               "maxLength":100,
               "minLength":0,
               "type":"string"
            },
            "RegionId":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "Description":{
               "maxLength":500,
               "minLength":0,
               "type":"string"
            },
            "ServiceName":{
               "maxLength":100,
               "minLength":0,
               "type":"string"
            }
         }
      },
      "InstituteConnectionSetting":{
         "type":"object",
         "properties":{
            "Username":{
               "type":"string"
            },
            "Password":{
               "type":"string"
            },
            "ServiceName":{
               "type":"string"
            }
         }
      },
      "FilterStatusLog":{
         "type":"object",
         "properties":{
            "Filter":{
               "$ref":"#/definitions/IFilter"
            },
            "ReasonForLogging":{
               "enum":[
                  "Unknown",
                  "New",
                  "Move",
                  "Delete",
                  "Init"
               ],
               "type":"string"
            }
         }
      },
      "NotificationServer":{
         "required":[
            "Id",
            "Name"
         ],
         "type":"object",
         "properties":{
            "Id":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "Name":{
               "maxLength":500,
               "minLength":0,
               "type":"string"
            },
            "Description":{
               "maxLength":500,
               "minLength":0,
               "type":"string"
            },
            "MailboxesAssignedCount":{
               "format":"int32",
               "type":"integer"
            },
            "MailboxesAssignedInitiallyCount":{
               "format":"int32",
               "type":"integer"
            },
            "PerformanceInformation":{
               "$ref":"#/definitions/NotificationServerPerformance"
            },
            "PerformanceCounter":{
               "type":"object",
               "additionalProperties":{
                  "$ref":"#/definitions/PerformanceCounterTraceValue"
               }
            },
            "WatchdogServer":{
               "$ref":"#/definitions/WatchdogServerEntity"
            },
            "LastUpdate":{
               "format":"date-time",
               "type":"string"
            }
         }
      },
      "NotificationServerPerformance":{
         "type":"object",
         "properties":{
            "QueueCounter":{
               "format":"int32",
               "type":"integer"
            },
            "AverageProcessingTime":{
               "format":"double",
               "type":"number"
            },
            "LastUpdate":{
               "format":"date-time",
               "type":"string"
            }
         }
      },
      "PerformanceCounterTraceValue":{
         "type":"object",
         "properties":{
            "Name":{
               "type":"string"
            },
            "Value":{
               "type":"string"
            },
            "ValueMin":{
               "type":"string"
            },
            "ValueMax":{
               "type":"string"
            },
            "MachineHostname":{
               "type":"string"
            },
            "MachineFQDN":{
               "type":"string"
            },
            "LogTime":{
               "format":"date-time",
               "type":"string"
            },
            "DataType":{
               "$ref":"#/definitions/PerformanceCounterDataType"
            }
         }
      },
      "WatchdogServerEntity":{
         "required":[
            "Id"
         ],
         "type":"object",
         "properties":{
            "Id":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "Name":{
               "maxLength":50,
               "minLength":0,
               "type":"string"
            },
            "OrderId":{
               "format":"int32",
               "type":"integer"
            },
            "Description":{
               "maxLength":1000,
               "minLength":0,
               "type":"string"
            },
            "LastUpdate":{
               "format":"date-time",
               "type":"string"
            }
         }
      },
      "PerformanceCounterDataType":{
         "type":"object",
         "properties":{
            "Value":{
               "type":"string"
            },
            "Type":{
               "type":"string"
            }
         }
      },
      "MailboxEntity":{
         "required":[
            "Name",
            "NotificationServerId",
            "InitialNotificationServerId"
         ],
         "type":"object",
         "properties":{
            "Name":{
               "maxLength":310,
               "minLength":0,
               "type":"string"
            },
            "NotificationServerId":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "InitialNotificationServerId":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "LastUpdate":{
               "format":"date-time",
               "type":"string"
            }
         }
      },
      "RequestFilterEntity":{
         "type":"object",
         "properties":{
            "Column":{
               "type":"string"
            },
            "Value":{
               "type":"string"
            },
            "Type":{
               "enum":[
                  "Equal",
                  "Contains",
                  "GreaterThan",
                  "LowerThan"
               ],
               "type":"string"
            }
         }
      },
      "PaginationEntity[SettingEntity]":{
         "type":"object",
         "properties":{
            "Items":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/SettingEntity"
               }
            },
            "Offset":{
               "format":"int64",
               "type":"integer"
            },
            "TotalCount":{
               "format":"int64",
               "type":"integer"
            }
         }
      },
      "SettingEntity":{
         "required":[
            "Key"
         ],
         "type":"object",
         "properties":{
            "Key":{
               "maxLength":50,
               "minLength":0,
               "type":"string"
            },
            "Value":{
               "maxLength":300,
               "minLength":0,
               "type":"string"
            },
            "Description":{
               "maxLength":300,
               "minLength":0,
               "type":"string"
            },
            "LastUpdate":{
               "format":"date-time",
               "type":"string"
            },
            "ShowInAdminFrontend":{
               "type":"boolean"
            },
            "IsEditableInAdminFrontend":{
               "type":"boolean"
            }
         }
      },
      "PaginationEntity[TraceEntity]":{
         "type":"object",
         "properties":{
            "Items":{
               "type":"array",
               "items":{
                  "$ref":"#/definitions/TraceEntity"
               }
            },
            "Offset":{
               "format":"int64",
               "type":"integer"
            },
            "TotalCount":{
               "format":"int64",
               "type":"integer"
            }
         }
      },
      "TraceEntity":{
         "type":"object",
         "properties":{
            "LogTime":{
               "format":"date-time",
               "type":"string"
            },
            "Id":{
               "format":"int32",
               "type":"integer"
            },
            "TraceId":{
               "format":"int32",
               "type":"integer"
            },
            "TraceLevel":{
               "format":"int32",
               "type":"integer"
            },
            "Message":{
               "type":"string"
            },
            "ProcessId":{
               "format":"int32",
               "type":"integer"
            },
            "ThreadId":{
               "format":"int32",
               "type":"integer"
            },
            "Project":{
               "type":"string"
            },
            "UserName":{
               "type":"string"
            },
            "Computer":{
               "type":"string"
            },
            "InternetMessageId":{
               "type":"string"
            },
            "Mailbox":{
               "type":"string"
            }
         }
      },
      "WatchdogEntity":{
         "type":"object",
         "properties":{
            "NotificationServerId":{
               "format":"uuid",
               "type":"string",
               "example":"00000000-0000-0000-0000-000000000000"
            },
            "QueueCounter":{
               "format":"int32",
               "type":"integer"
            },
            "Average":{
               "format":"double",
               "type":"number"
            },
            "LastUpdate":{
               "format":"date-time",
               "type":"string"
            }
         }
      }
   },
   "securityDefinitions":{
      "apiKey":{
         "type":"apiKey",
         "description":"API Key Authentication",
         "name":"APIKey",
         "in":"header"
      }
   }
}